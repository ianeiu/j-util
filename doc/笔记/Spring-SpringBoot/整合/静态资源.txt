  方式一：
	pom新增配置：
	<resources>
		<resource>
	        <directory>src/main/webapp</directory>
	        <!--注意此次必须要放在此目录下才能被访问到-->
	        <targetPath>META-INF/resources</targetPath>
	        <filtering>true</filtering>
	        <includes>
	            <include>**/**</include>
	        </includes>
	    </resource>
	</resources>
	
	新增配置：
	@Override
	public void addResourceHandlers(ResourceHandlerRegistry registry) {
	    registry.addResourceHandler("/js/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/js/");
	    registry.addResourceHandler("/css/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/css/");
	    registry.addResourceHandler("/images/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/images/");
	    registry.addResourceHandler("/common/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/common/");
	    registry.addResourceHandler("/register/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/register/");
	    registry.addResourceHandler("/plugin/**").addResourceLocations("classpath:/META-INF/resources/WEB-INF/plugin/");
	    super.addResourceHandlers(registry);
	 }
 
 方式二（推荐）：
	将静态资源文件放到resouce/static目录下

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/js/**").addResourceLocations("classpath:/static/js/");
        registry.addResourceHandler("/css/**").addResourceLocations("classpath:/static/css/");
        registry.addResourceHandler("/images/**").addResourceLocations("classpath:/static/images/");
        registry.addResourceHandler("/register/**").addResourceLocations("classpath:/static/register/");
        registry.addResourceHandler("/plugin/**").addResourceLocations("classpath:/static/plugin/");
        super.addResourceHandlers(registry);
     }